

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 27 16:52:20 2024

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131                           
   132                           	psect	strings
   133  03E6                     __pstrings:	
   134  03E6                     stringtab:	
   135  03E6                     __stringtab:	
   136  03E6                     stringcode:	
   137                           ;	String table - string pointers are 1 byte each
   138                           
   139  03E6                     stringdir:	
   140  03E6  3003               	movlw	high stringdir
   141  03E7  008A               	movwf	10
   142  03E8  0804               	movf	4,w
   143  03E9  0A84               	incf	4,f
   144  03EA  0782               	addwf	2,f
   145  03EB                     __stringbase:	
   146  03EB  3400               	retlw	0
   147  03EC                     __end_of__stringtab:	
   148  03EC                     _code_7seg:	
   149  03EC  34C0               	retlw	192
   150  03ED  34F9               	retlw	249
   151  03EE  34A4               	retlw	164
   152  03EF  34B0               	retlw	176
   153  03F0  3499               	retlw	153
   154  03F1  3492               	retlw	146
   155  03F2  3482               	retlw	130
   156  03F3  34F8               	retlw	248
   157  03F4  3480               	retlw	128
   158  03F5  3490               	retlw	144
   159  03F6                     __end_of_code_7seg:	
   160  0008                     _PORTD	set	8
   161  0007                     _PORTC	set	7
   162  005B                     _RBIE	set	91
   163  005F                     _GIE	set	95
   164  0034                     _RB4	set	52
   165  0033                     _RB3	set	51
   166  0032                     _RB2	set	50
   167  0031                     _RB1	set	49
   168  004A                     _RE2	set	74
   169  0049                     _RE1	set	73
   170  0048                     _RE0	set	72
   171  0030                     _RB0	set	48
   172  0058                     _RBIF	set	88
   173  0059                     _INTF	set	89
   174  0095                     _WPUB	set	149
   175  0088                     _TRISD	set	136
   176  0087                     _TRISC	set	135
   177  04B4                     _IOCB4	set	1204
   178  04B3                     _IOCB3	set	1203
   179  04B2                     _IOCB2	set	1202
   180  04B1                     _IOCB1	set	1201
   181  04B0                     _IOCB0	set	1200
   182  040F                     _nRBPU	set	1039
   183  0434                     _TRISB4	set	1076
   184  0433                     _TRISB3	set	1075
   185  0432                     _TRISB2	set	1074
   186  0431                     _TRISB1	set	1073
   187  0430                     _TRISB0	set	1072
   188  044A                     _TRISE2	set	1098
   189  0449                     _TRISE1	set	1097
   190  0448                     _TRISE0	set	1096
   191  0189                     _ANSELH	set	393
   192  0188                     _ANSEL	set	392
   193                           
   194                           ; #config settings
   195  0000                     
   196                           	psect	cinit
   197  0015                     start_initialization:	
   198  0015                     __initialization:	
   199                           
   200                           ; Clear objects allocated to COMMON
   201  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   202  0016  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   203  0017  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   204  0018  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   205                           
   206                           ; Clear objects allocated to BANK0
   207  0019  1283               	bcf	3,5	;RP0=0, select bank0
   208  001A  1303               	bcf	3,6	;RP1=0, select bank0
   209  001B  01B3               	clrf	__pbssBANK0& (0+127)
   210  001C                     end_of_initialization:	
   211                           ;End of C runtime variable initialization code
   212                           
   213  001C                     __end_of__initialization:	
   214  001C  0183               	clrf	3
   215  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   216                           
   217                           	psect	bssCOMMON
   218  0079                     __pbssCOMMON:	
   219  0079                     _countdo:	
   220  0079                     	ds	1
   221  007A                     _countxanh:	
   222  007A                     	ds	1
   223  007B                     _i:	
   224  007B                     	ds	1
   225  007C                     _dem:	
   226  007C                     	ds	1
   227                           
   228                           	psect	bssBANK0
   229  0033                     __pbssBANK0:	
   230  0033                     _setting_confirmed:	
   231  0033                     	ds	1
   232                           
   233                           	psect	cstackCOMMON
   234  0070                     __pcstackCOMMON:	
   235  0070                     ?_ngat:	
   236  0070                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?i1___awdiv:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ?i1___awmod:	
   243                           ; 2 bytes @ 0x0
   244                           
   245  0070                     i1___awdiv@divisor:	
   246                           ; 2 bytes @ 0x0
   247                           
   248  0070                     i1___awmod@divisor:	
   249                           ; 2 bytes @ 0x0
   250                           
   251                           
   252                           ; 2 bytes @ 0x0
   253  0070                     	ds	2
   254  0072                     i1___awdiv@dividend:	
   255  0072                     i1___awmod@dividend:	
   256                           ; 2 bytes @ 0x2
   257                           
   258                           
   259                           ; 2 bytes @ 0x2
   260  0072                     	ds	2
   261  0074                     ??i1___awdiv:	
   262  0074                     ??i1___awmod:	
   263                           ; 1 bytes @ 0x4
   264                           
   265                           
   266                           ; 1 bytes @ 0x4
   267  0074                     	ds	1
   268  0075                     i1___awdiv@counter:	
   269  0075                     i1___awmod@counter:	
   270                           ; 1 bytes @ 0x5
   271                           
   272                           
   273                           ; 1 bytes @ 0x5
   274  0075                     	ds	1
   275  0076                     i1___awdiv@sign:	
   276  0076                     i1___awmod@sign:	
   277                           ; 1 bytes @ 0x6
   278                           
   279                           
   280                           ; 1 bytes @ 0x6
   281  0076                     	ds	1
   282  0077                     i1___awdiv@quotient:	
   283                           
   284                           ; 2 bytes @ 0x7
   285  0077                     	ds	2
   286                           
   287                           	psect	cstackBANK0
   288  0020                     __pcstackBANK0:	
   289  0020                     ??_ngat:	
   290                           
   291                           ; 1 bytes @ 0x0
   292  0020                     	ds	7
   293  0027                     ?___awdiv:	
   294  0027                     ?___awmod:	
   295                           ; 2 bytes @ 0x7
   296                           
   297  0027                     ___awdiv@divisor:	
   298                           ; 2 bytes @ 0x7
   299                           
   300  0027                     ___awmod@divisor:	
   301                           ; 2 bytes @ 0x7
   302                           
   303                           
   304                           ; 2 bytes @ 0x7
   305  0027                     	ds	2
   306  0029                     ___awdiv@dividend:	
   307  0029                     ___awmod@dividend:	
   308                           ; 2 bytes @ 0x9
   309                           
   310                           
   311                           ; 2 bytes @ 0x9
   312  0029                     	ds	2
   313  002B                     ??___awdiv:	
   314  002B                     ??___awmod:	
   315                           ; 1 bytes @ 0xB
   316                           
   317                           
   318                           ; 1 bytes @ 0xB
   319  002B                     	ds	1
   320  002C                     ___awdiv@counter:	
   321  002C                     ___awmod@counter:	
   322                           ; 1 bytes @ 0xC
   323                           
   324                           
   325                           ; 1 bytes @ 0xC
   326  002C                     	ds	1
   327  002D                     ___awdiv@sign:	
   328  002D                     ___awmod@sign:	
   329                           ; 1 bytes @ 0xD
   330                           
   331                           
   332                           ; 1 bytes @ 0xD
   333  002D                     	ds	1
   334  002E                     ___awdiv@quotient:	
   335                           
   336                           ; 2 bytes @ 0xE
   337  002E                     	ds	2
   338  0030                     ??_main:	
   339                           
   340                           ; 1 bytes @ 0x10
   341  0030                     	ds	3
   342                           
   343                           	psect	maintext
   344  0020                     __pmaintext:	
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 98 in file "mainn.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : B00/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          0       3       0       0       0
   367 ;;      Totals:         0       3       0       0       0
   368 ;;Total ram usage:        3 bytes
   369 ;; Hardware stack levels required when called:    3
   370 ;; This function calls:
   371 ;;		___awdiv
   372 ;;		___awmod
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _main
   380  0020                     _main:	
   381                           
   382                           ;mainn.c: 100: ANSEL=ANSELH=0x00;
   383                           
   384                           ;incstack = 0
   385                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   386  0020  1683               	bsf	3,5	;RP0=1, select bank3
   387  0021  1703               	bsf	3,6	;RP1=1, select bank3
   388  0022  0189               	clrf	9	;volatile
   389  0023  0188               	clrf	8	;volatile
   390                           
   391                           ;mainn.c: 101: TRISC=0;
   392  0024  1683               	bsf	3,5	;RP0=1, select bank1
   393  0025  1303               	bcf	3,6	;RP1=0, select bank1
   394  0026  0187               	clrf	7	;volatile
   395                           
   396                           ;mainn.c: 102: TRISD=0;
   397  0027  0188               	clrf	8	;volatile
   398                           
   399                           ;mainn.c: 103: TRISE0=0;
   400  0028  1009               	bcf	9,0	;volatile
   401                           
   402                           ;mainn.c: 104: TRISE1=0;
   403  0029  1089               	bcf	9,1	;volatile
   404                           
   405                           ;mainn.c: 105: TRISE2=0;
   406  002A  1109               	bcf	9,2	;volatile
   407                           
   408                           ;mainn.c: 106: TRISB0=1;
   409  002B  1406               	bsf	6,0	;volatile
   410                           
   411                           ;mainn.c: 107: TRISB1=1;
   412  002C  1486               	bsf	6,1	;volatile
   413                           
   414                           ;mainn.c: 108: TRISB2=1;
   415  002D  1506               	bsf	6,2	;volatile
   416                           
   417                           ;mainn.c: 109: TRISB3=1;
   418  002E  1586               	bsf	6,3	;volatile
   419                           
   420                           ;mainn.c: 110: TRISB4=1;
   421  002F  1606               	bsf	6,4	;volatile
   422                           
   423                           ;mainn.c: 111: nRBPU=0;
   424  0030  1381               	bcf	1,7	;volatile
   425                           
   426                           ;mainn.c: 112: WPUB=0xff;
   427  0031  30FF               	movlw	255
   428  0032  0095               	movwf	21	;volatile
   429                           
   430                           ;mainn.c: 114: GIE=1;
   431  0033  178B               	bsf	11,7	;volatile
   432                           
   433                           ;mainn.c: 115: RBIF=0;
   434  0034  100B               	bcf	11,0	;volatile
   435                           
   436                           ;mainn.c: 116: RBIE=1;
   437  0035  158B               	bsf	11,3	;volatile
   438                           
   439                           ;mainn.c: 117: IOCB0=IOCB1=IOCB2=IOCB3=1;
   440  0036  1596               	bsf	22,3	;volatile
   441  0037  1D96               	btfss	22,3	;volatile
   442  0038  283D               	goto	u1140
   443  0039  1683               	bsf	3,5	;RP0=1, select bank1
   444  003A  1303               	bcf	3,6	;RP1=0, select bank1
   445  003B  1516               	bsf	22,2	;volatile
   446  003C  2840               	goto	u1154
   447  003D                     u1140:	
   448  003D  1683               	bsf	3,5	;RP0=1, select bank1
   449  003E  1303               	bcf	3,6	;RP1=0, select bank1
   450  003F  1116               	bcf	22,2	;volatile
   451  0040                     u1154:	
   452  0040  1D16               	btfss	22,2	;volatile
   453  0041  2846               	goto	u1150
   454  0042  1683               	bsf	3,5	;RP0=1, select bank1
   455  0043  1303               	bcf	3,6	;RP1=0, select bank1
   456  0044  1496               	bsf	22,1	;volatile
   457  0045  2849               	goto	u1164
   458  0046                     u1150:	
   459  0046  1683               	bsf	3,5	;RP0=1, select bank1
   460  0047  1303               	bcf	3,6	;RP1=0, select bank1
   461  0048  1096               	bcf	22,1	;volatile
   462  0049                     u1164:	
   463  0049  1C96               	btfss	22,1	;volatile
   464  004A  284F               	goto	u1160
   465  004B  1683               	bsf	3,5	;RP0=1, select bank1
   466  004C  1303               	bcf	3,6	;RP1=0, select bank1
   467  004D  1416               	bsf	22,0	;volatile
   468  004E  2852               	goto	l1142
   469  004F                     u1160:	
   470  004F  1683               	bsf	3,5	;RP0=1, select bank1
   471  0050  1303               	bcf	3,6	;RP1=0, select bank1
   472  0051  1016               	bcf	22,0	;volatile
   473  0052                     l1142:	
   474                           
   475                           ;mainn.c: 118: IOCB4 = 1;
   476  0052  1616               	bsf	22,4	;volatile
   477                           
   478                           ;mainn.c: 119: PORTC=PORTD=0xC0;
   479  0053  30C0               	movlw	192
   480  0054  1283               	bcf	3,5	;RP0=0, select bank0
   481  0055  1303               	bcf	3,6	;RP1=0, select bank0
   482  0056  0088               	movwf	8	;volatile
   483  0057  0087               	movwf	7	;volatile
   484                           
   485                           ;mainn.c: 120: RE0=RE1=RE2=0;
   486  0058  1109               	bcf	9,2	;volatile
   487  0059  1089               	bcf	9,1	;volatile
   488  005A  1009               	bcf	9,0	;volatile
   489                           
   490                           ;mainn.c: 121: _delay((unsigned long)((5000)*(4000000/4000.0)));
   491  005B  301A               	movlw	26
   492  005C  1283               	bcf	3,5	;RP0=0, select bank0
   493  005D  1303               	bcf	3,6	;RP1=0, select bank0
   494  005E  00B2               	movwf	??_main+2
   495  005F  305E               	movlw	94
   496  0060  00B1               	movwf	??_main+1
   497  0061  306D               	movlw	109
   498  0062  00B0               	movwf	??_main
   499  0063                     u1237:	
   500  0063  0BB0               	decfsz	??_main,f
   501  0064  2863               	goto	u1237
   502  0065  0BB1               	decfsz	??_main+1,f
   503  0066  2863               	goto	u1237
   504  0067  0BB2               	decfsz	??_main+2,f
   505  0068  2863               	goto	u1237
   506  0069  286A               	nop2
   507  006A                     l1150:	
   508                           ;mainn.c: 122: while (1)
   509                           
   510                           
   511                           ;mainn.c: 123: { if (setting_confirmed)
   512  006A  1283               	bcf	3,5	;RP0=0, select bank0
   513  006B  1303               	bcf	3,6	;RP1=0, select bank0
   514  006C  0833               	movf	_setting_confirmed,w
   515  006D  1903               	btfsc	3,2
   516  006E  286A               	goto	l1150
   517                           
   518                           ;mainn.c: 124: {
   519                           ;mainn.c: 125: for (dem=countxanh;dem>=00;dem--)
   520  006F  087A               	movf	_countxanh,w
   521  0070  00B0               	movwf	??_main
   522  0071  0830               	movf	??_main,w
   523  0072  00FC               	movwf	_dem
   524  0073                     l1160:	
   525  0073  1BFC               	btfsc	_dem,7
   526  0074  28BF               	goto	l1162
   527                           
   528                           ;mainn.c: 126: {
   529                           ;mainn.c: 127: RE0=1;
   530  0075  1409               	bsf	9,0	;volatile
   531                           
   532                           ;mainn.c: 128: RE1=0;
   533  0076  1089               	bcf	9,1	;volatile
   534                           
   535                           ;mainn.c: 129: RE2=0;
   536  0077  1109               	bcf	9,2	;volatile
   537                           
   538                           ;mainn.c: 130: PORTC=code_7seg[dem/10];
   539  0078  300A               	movlw	10
   540  0079  00A7               	movwf	___awdiv@divisor
   541  007A  3000               	movlw	0
   542  007B  00A8               	movwf	___awdiv@divisor+1
   543  007C  087C               	movf	_dem,w
   544  007D  00A9               	movwf	___awdiv@dividend
   545  007E  01AA               	clrf	___awdiv@dividend+1
   546  007F  1BA9               	btfsc	___awdiv@dividend,7
   547  0080  03AA               	decf	___awdiv@dividend+1,f
   548  0081  120A  118A  229A  120A  118A  	fcall	___awdiv
   549  0086  1283               	bcf	3,5	;RP0=0, select bank0
   550  0087  1303               	bcf	3,6	;RP1=0, select bank0
   551  0088  0827               	movf	?___awdiv,w
   552  0089  3E01               	addlw	low ((_code_7seg-__stringbase)| (0+32768))
   553  008A  0084               	movwf	4
   554  008B  120A  118A  23E6  120A  118A  	fcall	stringdir
   555  0090  0087               	movwf	7	;volatile
   556                           
   557                           ;mainn.c: 131: PORTD=code_7seg[dem%10];
   558  0091  300A               	movlw	10
   559  0092  00A7               	movwf	___awmod@divisor
   560  0093  3000               	movlw	0
   561  0094  00A8               	movwf	___awmod@divisor+1
   562  0095  087C               	movf	_dem,w
   563  0096  00A9               	movwf	___awmod@dividend
   564  0097  01AA               	clrf	___awmod@dividend+1
   565  0098  1BA9               	btfsc	___awmod@dividend,7
   566  0099  03AA               	decf	___awmod@dividend+1,f
   567  009A  120A  118A  234E  120A  118A  	fcall	___awmod
   568  009F  1283               	bcf	3,5	;RP0=0, select bank0
   569  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   570  00A1  0827               	movf	?___awmod,w
   571  00A2  3E01               	addlw	low ((_code_7seg-__stringbase)| (0+32768))
   572  00A3  0084               	movwf	4
   573  00A4  120A  118A  23E6  120A  118A  	fcall	stringdir
   574  00A9  0088               	movwf	8	;volatile
   575                           
   576                           ;mainn.c: 132: _delay((unsigned long)((1000)*(4000000/4000.0)));
   577  00AA  3006               	movlw	6
   578  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   579  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   580  00AD  00B2               	movwf	??_main+2
   581  00AE  3013               	movlw	19
   582  00AF  00B1               	movwf	??_main+1
   583  00B0  30AD               	movlw	173
   584  00B1  00B0               	movwf	??_main
   585  00B2                     u1247:	
   586  00B2  0BB0               	decfsz	??_main,f
   587  00B3  28B2               	goto	u1247
   588  00B4  0BB1               	decfsz	??_main+1,f
   589  00B5  28B2               	goto	u1247
   590  00B6  0BB2               	decfsz	??_main+2,f
   591  00B7  28B2               	goto	u1247
   592  00B8  30FF               	movlw	255
   593  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   594  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   595  00BB  00B0               	movwf	??_main
   596  00BC  0830               	movf	??_main,w
   597  00BD  07FC               	addwf	_dem,f
   598  00BE  2873               	goto	l1160
   599  00BF                     l1162:	
   600                           
   601                           ;mainn.c: 133: }
   602                           ;mainn.c: 134: for (dem=5;dem>=00;dem--)
   603  00BF  3005               	movlw	5
   604  00C0  00B0               	movwf	??_main
   605  00C1  0830               	movf	??_main,w
   606  00C2  00FC               	movwf	_dem
   607  00C3  1BFC               	btfsc	_dem,7
   608  00C4  2910               	goto	l1176
   609  00C5                     l119:	
   610                           
   611                           ;mainn.c: 135: {
   612                           ;mainn.c: 136: RE0=0;
   613  00C5  1009               	bcf	9,0	;volatile
   614                           
   615                           ;mainn.c: 137: RE1=1;
   616  00C6  1489               	bsf	9,1	;volatile
   617                           
   618                           ;mainn.c: 138: RE2=0;
   619  00C7  1109               	bcf	9,2	;volatile
   620                           
   621                           ;mainn.c: 139: PORTC=code_7seg[dem/10];
   622  00C8  300A               	movlw	10
   623  00C9  00A7               	movwf	___awdiv@divisor
   624  00CA  3000               	movlw	0
   625  00CB  00A8               	movwf	___awdiv@divisor+1
   626  00CC  087C               	movf	_dem,w
   627  00CD  00A9               	movwf	___awdiv@dividend
   628  00CE  01AA               	clrf	___awdiv@dividend+1
   629  00CF  1BA9               	btfsc	___awdiv@dividend,7
   630  00D0  03AA               	decf	___awdiv@dividend+1,f
   631  00D1  120A  118A  229A  120A  118A  	fcall	___awdiv
   632  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   633  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   634  00D8  0827               	movf	?___awdiv,w
   635  00D9  3E01               	addlw	low ((_code_7seg-__stringbase)| (0+32768))
   636  00DA  0084               	movwf	4
   637  00DB  120A  118A  23E6  120A  118A  	fcall	stringdir
   638  00E0  0087               	movwf	7	;volatile
   639                           
   640                           ;mainn.c: 140: PORTD=code_7seg[dem%10];
   641  00E1  300A               	movlw	10
   642  00E2  00A7               	movwf	___awmod@divisor
   643  00E3  3000               	movlw	0
   644  00E4  00A8               	movwf	___awmod@divisor+1
   645  00E5  087C               	movf	_dem,w
   646  00E6  00A9               	movwf	___awmod@dividend
   647  00E7  01AA               	clrf	___awmod@dividend+1
   648  00E8  1BA9               	btfsc	___awmod@dividend,7
   649  00E9  03AA               	decf	___awmod@dividend+1,f
   650  00EA  120A  118A  234E  120A  118A  	fcall	___awmod
   651  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   652  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   653  00F1  0827               	movf	?___awmod,w
   654  00F2  3E01               	addlw	low ((_code_7seg-__stringbase)| (0+32768))
   655  00F3  0084               	movwf	4
   656  00F4  120A  118A  23E6  120A  118A  	fcall	stringdir
   657  00F9  0088               	movwf	8	;volatile
   658                           
   659                           ;mainn.c: 141: _delay((unsigned long)((1000)*(4000000/4000.0)));
   660  00FA  3006               	movlw	6
   661  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   662  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   663  00FD  00B2               	movwf	??_main+2
   664  00FE  3013               	movlw	19
   665  00FF  00B1               	movwf	??_main+1
   666  0100  30AD               	movlw	173
   667  0101  00B0               	movwf	??_main
   668  0102                     u1257:	
   669  0102  0BB0               	decfsz	??_main,f
   670  0103  2902               	goto	u1257
   671  0104  0BB1               	decfsz	??_main+1,f
   672  0105  2902               	goto	u1257
   673  0106  0BB2               	decfsz	??_main+2,f
   674  0107  2902               	goto	u1257
   675  0108  30FF               	movlw	255
   676  0109  1283               	bcf	3,5	;RP0=0, select bank0
   677  010A  1303               	bcf	3,6	;RP1=0, select bank0
   678  010B  00B0               	movwf	??_main
   679  010C  0830               	movf	??_main,w
   680  010D  07FC               	addwf	_dem,f
   681  010E  1FFC               	btfss	_dem,7
   682  010F  28C5               	goto	l119
   683  0110                     l1176:	
   684                           
   685                           ;mainn.c: 142: }
   686                           ;mainn.c: 143: for (dem=countdo;dem>=0;dem--)
   687  0110  0879               	movf	_countdo,w
   688  0111  00B0               	movwf	??_main
   689  0112  0830               	movf	??_main,w
   690  0113  00FC               	movwf	_dem
   691  0114                     l1184:	
   692  0114  1BFC               	btfsc	_dem,7
   693  0115  286A               	goto	l1150
   694                           
   695                           ;mainn.c: 144: {
   696                           ;mainn.c: 145: RE0=0;
   697  0116  1009               	bcf	9,0	;volatile
   698                           
   699                           ;mainn.c: 146: RE1=0;
   700  0117  1089               	bcf	9,1	;volatile
   701                           
   702                           ;mainn.c: 147: RE2=1;
   703  0118  1509               	bsf	9,2	;volatile
   704                           
   705                           ;mainn.c: 148: PORTC=code_7seg[dem/10];
   706  0119  300A               	movlw	10
   707  011A  00A7               	movwf	___awdiv@divisor
   708  011B  3000               	movlw	0
   709  011C  00A8               	movwf	___awdiv@divisor+1
   710  011D  087C               	movf	_dem,w
   711  011E  00A9               	movwf	___awdiv@dividend
   712  011F  01AA               	clrf	___awdiv@dividend+1
   713  0120  1BA9               	btfsc	___awdiv@dividend,7
   714  0121  03AA               	decf	___awdiv@dividend+1,f
   715  0122  120A  118A  229A  120A  118A  	fcall	___awdiv
   716  0127  1283               	bcf	3,5	;RP0=0, select bank0
   717  0128  1303               	bcf	3,6	;RP1=0, select bank0
   718  0129  0827               	movf	?___awdiv,w
   719  012A  3E01               	addlw	low ((_code_7seg-__stringbase)| (0+32768))
   720  012B  0084               	movwf	4
   721  012C  120A  118A  23E6  120A  118A  	fcall	stringdir
   722  0131  0087               	movwf	7	;volatile
   723                           
   724                           ;mainn.c: 149: PORTD=code_7seg[dem%10];
   725  0132  300A               	movlw	10
   726  0133  00A7               	movwf	___awmod@divisor
   727  0134  3000               	movlw	0
   728  0135  00A8               	movwf	___awmod@divisor+1
   729  0136  087C               	movf	_dem,w
   730  0137  00A9               	movwf	___awmod@dividend
   731  0138  01AA               	clrf	___awmod@dividend+1
   732  0139  1BA9               	btfsc	___awmod@dividend,7
   733  013A  03AA               	decf	___awmod@dividend+1,f
   734  013B  120A  118A  234E  120A  118A  	fcall	___awmod
   735  0140  1283               	bcf	3,5	;RP0=0, select bank0
   736  0141  1303               	bcf	3,6	;RP1=0, select bank0
   737  0142  0827               	movf	?___awmod,w
   738  0143  3E01               	addlw	low ((_code_7seg-__stringbase)| (0+32768))
   739  0144  0084               	movwf	4
   740  0145  120A  118A  23E6  120A  118A  	fcall	stringdir
   741  014A  0088               	movwf	8	;volatile
   742                           
   743                           ;mainn.c: 150: _delay((unsigned long)((1000)*(4000000/4000.0)));
   744  014B  3006               	movlw	6
   745  014C  1283               	bcf	3,5	;RP0=0, select bank0
   746  014D  1303               	bcf	3,6	;RP1=0, select bank0
   747  014E  00B2               	movwf	??_main+2
   748  014F  3013               	movlw	19
   749  0150  00B1               	movwf	??_main+1
   750  0151  30AD               	movlw	173
   751  0152  00B0               	movwf	??_main
   752  0153                     u1267:	
   753  0153  0BB0               	decfsz	??_main,f
   754  0154  2953               	goto	u1267
   755  0155  0BB1               	decfsz	??_main+1,f
   756  0156  2953               	goto	u1267
   757  0157  0BB2               	decfsz	??_main+2,f
   758  0158  2953               	goto	u1267
   759  0159  30FF               	movlw	255
   760  015A  1283               	bcf	3,5	;RP0=0, select bank0
   761  015B  1303               	bcf	3,6	;RP1=0, select bank0
   762  015C  00B0               	movwf	??_main
   763  015D  0830               	movf	??_main,w
   764  015E  07FC               	addwf	_dem,f
   765  015F  2914               	goto	l1184
   766  0160                     __end_of_main:	
   767                           
   768                           	psect	text1
   769  034E                     __ptext1:	
   770 ;; *************** function ___awmod *****************
   771 ;; Defined at:
   772 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  divisor         2    7[BANK0 ] int 
   775 ;;  dividend        2    9[BANK0 ] int 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  sign            1   13[BANK0 ] unsigned char 
   778 ;;  counter         1   12[BANK0 ] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  2    7[BANK0 ] int 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       4       0       0       0
   789 ;;      Locals:         0       2       0       0       0
   790 ;;      Temps:          0       1       0       0       0
   791 ;;      Totals:         0       7       0       0       0
   792 ;;Total ram usage:        7 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    2
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function ___awmod
   804  034E                     ___awmod:	
   805                           
   806                           ;incstack = 0
   807                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   808  034E  1283               	bcf	3,5	;RP0=0, select bank0
   809  034F  1303               	bcf	3,6	;RP1=0, select bank0
   810  0350  01AD               	clrf	___awmod@sign
   811  0351  1FAA               	btfss	___awmod@dividend+1,7
   812  0352  2B5A               	goto	l938
   813  0353  09A9               	comf	___awmod@dividend,f
   814  0354  09AA               	comf	___awmod@dividend+1,f
   815  0355  0AA9               	incf	___awmod@dividend,f
   816  0356  1903               	skipnz
   817  0357  0AAA               	incf	___awmod@dividend+1,f
   818  0358  01AD               	clrf	___awmod@sign
   819  0359  0AAD               	incf	___awmod@sign,f
   820  035A                     l938:	
   821  035A  1FA8               	btfss	___awmod@divisor+1,7
   822  035B  2B61               	goto	l942
   823  035C  09A7               	comf	___awmod@divisor,f
   824  035D  09A8               	comf	___awmod@divisor+1,f
   825  035E  0AA7               	incf	___awmod@divisor,f
   826  035F  1903               	skipnz
   827  0360  0AA8               	incf	___awmod@divisor+1,f
   828  0361                     l942:	
   829  0361  0827               	movf	___awmod@divisor,w
   830  0362  0428               	iorwf	___awmod@divisor+1,w
   831  0363  1903               	btfsc	3,2
   832  0364  2B8E               	goto	l960
   833  0365  01AC               	clrf	___awmod@counter
   834  0366  0AAC               	incf	___awmod@counter,f
   835  0367                     l950:	
   836  0367  1BA8               	btfsc	___awmod@divisor+1,7
   837  0368  2B75               	goto	l952
   838  0369  3001               	movlw	1
   839  036A                     u755:	
   840  036A  1003               	clrc
   841  036B  0DA7               	rlf	___awmod@divisor,f
   842  036C  0DA8               	rlf	___awmod@divisor+1,f
   843  036D  3EFF               	addlw	-1
   844  036E  1D03               	skipz
   845  036F  2B6A               	goto	u755
   846  0370  3001               	movlw	1
   847  0371  00AB               	movwf	??___awmod
   848  0372  082B               	movf	??___awmod,w
   849  0373  07AC               	addwf	___awmod@counter,f
   850  0374  2B67               	goto	l950
   851  0375                     l952:	
   852  0375  0828               	movf	___awmod@divisor+1,w
   853  0376  022A               	subwf	___awmod@dividend+1,w
   854  0377  1D03               	skipz
   855  0378  2B7B               	goto	u775
   856  0379  0827               	movf	___awmod@divisor,w
   857  037A  0229               	subwf	___awmod@dividend,w
   858  037B                     u775:	
   859  037B  1C03               	skipc
   860  037C  2B83               	goto	l956
   861  037D  0827               	movf	___awmod@divisor,w
   862  037E  02A9               	subwf	___awmod@dividend,f
   863  037F  0828               	movf	___awmod@divisor+1,w
   864  0380  1C03               	skipc
   865  0381  03AA               	decf	___awmod@dividend+1,f
   866  0382  02AA               	subwf	___awmod@dividend+1,f
   867  0383                     l956:	
   868  0383  3001               	movlw	1
   869  0384                     u785:	
   870  0384  1003               	clrc
   871  0385  0CA8               	rrf	___awmod@divisor+1,f
   872  0386  0CA7               	rrf	___awmod@divisor,f
   873  0387  3EFF               	addlw	-1
   874  0388  1D03               	skipz
   875  0389  2B84               	goto	u785
   876  038A  3001               	movlw	1
   877  038B  02AC               	subwf	___awmod@counter,f
   878  038C  1D03               	btfss	3,2
   879  038D  2B75               	goto	l952
   880  038E                     l960:	
   881  038E  082D               	movf	___awmod@sign,w
   882  038F  1903               	btfsc	3,2
   883  0390  2B96               	goto	l964
   884  0391  09A9               	comf	___awmod@dividend,f
   885  0392  09AA               	comf	___awmod@dividend+1,f
   886  0393  0AA9               	incf	___awmod@dividend,f
   887  0394  1903               	skipnz
   888  0395  0AAA               	incf	___awmod@dividend+1,f
   889  0396                     l964:	
   890  0396  082A               	movf	___awmod@dividend+1,w
   891  0397  00A8               	movwf	?___awmod+1
   892  0398  0829               	movf	___awmod@dividend,w
   893  0399  00A7               	movwf	?___awmod
   894  039A  0008               	return
   895  039B                     __end_of___awmod:	
   896                           
   897                           	psect	text2
   898  029A                     __ptext2:	
   899 ;; *************** function ___awdiv *****************
   900 ;; Defined at:
   901 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  divisor         2    7[BANK0 ] int 
   904 ;;  dividend        2    9[BANK0 ] int 
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  quotient        2   14[BANK0 ] int 
   907 ;;  sign            1   13[BANK0 ] unsigned char 
   908 ;;  counter         1   12[BANK0 ] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  2    7[BANK0 ] int 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   918 ;;      Params:         0       4       0       0       0
   919 ;;      Locals:         0       4       0       0       0
   920 ;;      Temps:          0       1       0       0       0
   921 ;;      Totals:         0       9       0       0       0
   922 ;;Total ram usage:        9 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    2
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function ___awdiv
   934  029A                     ___awdiv:	
   935                           
   936                           ;incstack = 0
   937                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   938  029A  1283               	bcf	3,5	;RP0=0, select bank0
   939  029B  1303               	bcf	3,6	;RP1=0, select bank0
   940  029C  01AD               	clrf	___awdiv@sign
   941  029D  1FA8               	btfss	___awdiv@divisor+1,7
   942  029E  2AA6               	goto	l894
   943  029F  09A7               	comf	___awdiv@divisor,f
   944  02A0  09A8               	comf	___awdiv@divisor+1,f
   945  02A1  0AA7               	incf	___awdiv@divisor,f
   946  02A2  1903               	skipnz
   947  02A3  0AA8               	incf	___awdiv@divisor+1,f
   948  02A4  01AD               	clrf	___awdiv@sign
   949  02A5  0AAD               	incf	___awdiv@sign,f
   950  02A6                     l894:	
   951  02A6  1FAA               	btfss	___awdiv@dividend+1,7
   952  02A7  2AB1               	goto	l900
   953  02A8  09A9               	comf	___awdiv@dividend,f
   954  02A9  09AA               	comf	___awdiv@dividend+1,f
   955  02AA  0AA9               	incf	___awdiv@dividend,f
   956  02AB  1903               	skipnz
   957  02AC  0AAA               	incf	___awdiv@dividend+1,f
   958  02AD  3001               	movlw	1
   959  02AE  00AB               	movwf	??___awdiv
   960  02AF  082B               	movf	??___awdiv,w
   961  02B0  06AD               	xorwf	___awdiv@sign,f
   962  02B1                     l900:	
   963  02B1  01AE               	clrf	___awdiv@quotient
   964  02B2  01AF               	clrf	___awdiv@quotient+1
   965  02B3  0827               	movf	___awdiv@divisor,w
   966  02B4  0428               	iorwf	___awdiv@divisor+1,w
   967  02B5  1903               	btfsc	3,2
   968  02B6  2AE8               	goto	l922
   969  02B7  01AC               	clrf	___awdiv@counter
   970  02B8  0AAC               	incf	___awdiv@counter,f
   971  02B9                     l910:	
   972  02B9  1BA8               	btfsc	___awdiv@divisor+1,7
   973  02BA  2AC7               	goto	l912
   974  02BB  3001               	movlw	1
   975  02BC                     u655:	
   976  02BC  1003               	clrc
   977  02BD  0DA7               	rlf	___awdiv@divisor,f
   978  02BE  0DA8               	rlf	___awdiv@divisor+1,f
   979  02BF  3EFF               	addlw	-1
   980  02C0  1D03               	skipz
   981  02C1  2ABC               	goto	u655
   982  02C2  3001               	movlw	1
   983  02C3  00AB               	movwf	??___awdiv
   984  02C4  082B               	movf	??___awdiv,w
   985  02C5  07AC               	addwf	___awdiv@counter,f
   986  02C6  2AB9               	goto	l910
   987  02C7                     l912:	
   988  02C7  3001               	movlw	1
   989  02C8                     u675:	
   990  02C8  1003               	clrc
   991  02C9  0DAE               	rlf	___awdiv@quotient,f
   992  02CA  0DAF               	rlf	___awdiv@quotient+1,f
   993  02CB  3EFF               	addlw	-1
   994  02CC  1D03               	skipz
   995  02CD  2AC8               	goto	u675
   996  02CE  0828               	movf	___awdiv@divisor+1,w
   997  02CF  022A               	subwf	___awdiv@dividend+1,w
   998  02D0  1D03               	skipz
   999  02D1  2AD4               	goto	u685
  1000  02D2  0827               	movf	___awdiv@divisor,w
  1001  02D3  0229               	subwf	___awdiv@dividend,w
  1002  02D4                     u685:	
  1003  02D4  1C03               	skipc
  1004  02D5  2ADD               	goto	l918
  1005  02D6  0827               	movf	___awdiv@divisor,w
  1006  02D7  02A9               	subwf	___awdiv@dividend,f
  1007  02D8  0828               	movf	___awdiv@divisor+1,w
  1008  02D9  1C03               	skipc
  1009  02DA  03AA               	decf	___awdiv@dividend+1,f
  1010  02DB  02AA               	subwf	___awdiv@dividend+1,f
  1011  02DC  142E               	bsf	___awdiv@quotient,0
  1012  02DD                     l918:	
  1013  02DD  3001               	movlw	1
  1014  02DE                     u695:	
  1015  02DE  1003               	clrc
  1016  02DF  0CA8               	rrf	___awdiv@divisor+1,f
  1017  02E0  0CA7               	rrf	___awdiv@divisor,f
  1018  02E1  3EFF               	addlw	-1
  1019  02E2  1D03               	skipz
  1020  02E3  2ADE               	goto	u695
  1021  02E4  3001               	movlw	1
  1022  02E5  02AC               	subwf	___awdiv@counter,f
  1023  02E6  1D03               	btfss	3,2
  1024  02E7  2AC7               	goto	l912
  1025  02E8                     l922:	
  1026  02E8  082D               	movf	___awdiv@sign,w
  1027  02E9  1903               	btfsc	3,2
  1028  02EA  2AF0               	goto	l926
  1029  02EB  09AE               	comf	___awdiv@quotient,f
  1030  02EC  09AF               	comf	___awdiv@quotient+1,f
  1031  02ED  0AAE               	incf	___awdiv@quotient,f
  1032  02EE  1903               	skipnz
  1033  02EF  0AAF               	incf	___awdiv@quotient+1,f
  1034  02F0                     l926:	
  1035  02F0  082F               	movf	___awdiv@quotient+1,w
  1036  02F1  00A8               	movwf	?___awdiv+1
  1037  02F2  082E               	movf	___awdiv@quotient,w
  1038  02F3  00A7               	movwf	?___awdiv
  1039  02F4  0008               	return
  1040  02F5                     __end_of___awdiv:	
  1041                           
  1042                           	psect	text3
  1043  0160                     __ptext3:	
  1044 ;; *************** function _ngat *****************
  1045 ;; Defined at:
  1046 ;;		line 24 in file "mainn.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          0       7       0       0       0
  1063 ;;      Totals:         0       7       0       0       0
  1064 ;;Total ram usage:        7 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    1
  1067 ;; This function calls:
  1068 ;;		i1___awdiv
  1069 ;;		i1___awmod
  1070 ;; This function is called by:
  1071 ;;		Interrupt level 1
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _ngat
  1077  0160                     _ngat:	
  1078                           
  1079                           ;mainn.c: 26: INTF=0;
  1080  0160  108B               	bcf	11,1	;volatile
  1081                           
  1082                           ;mainn.c: 27: RBIF=0;
  1083  0161  100B               	bcf	11,0	;volatile
  1084                           
  1085                           ;mainn.c: 28: if (RB0==0)
  1086  0162  1806               	btfsc	6,0	;volatile
  1087  0163  2994               	goto	i1l85
  1088                           
  1089                           ;mainn.c: 29: {
  1090                           ;mainn.c: 30: _delay((unsigned long)((10)*(4000000/4000.0)));
  1091  0164  300D               	movlw	13
  1092  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0167  00A1               	movwf	??_ngat+1
  1095  0168  30FB               	movlw	251
  1096  0169  00A0               	movwf	??_ngat
  1097  016A                     u127_27:	
  1098  016A  0BA0               	decfsz	??_ngat,f
  1099  016B  296A               	goto	u127_27
  1100  016C  0BA1               	decfsz	??_ngat+1,f
  1101  016D  296A               	goto	u127_27
  1102  016E                     i1l86:	
  1103                           ;mainn.c: 31: while (RB0==0)
  1104                           
  1105  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1106  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0170  1806               	btfsc	6,0	;volatile
  1108  0171  2994               	goto	i1l85
  1109                           
  1110                           ;mainn.c: 32: {
  1111                           ;mainn.c: 33: for ( i=0;i>=0;i++)
  1112  0172  01FB               	clrf	_i
  1113  0173                     L1:	
  1114  0173  1BFB               	btfsc	_i,7
  1115  0174  296E               	goto	i1l86
  1116                           
  1117                           ;mainn.c: 34: {
  1118                           ;mainn.c: 35: RE0=0;
  1119  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0177  1009               	bcf	9,0	;volatile
  1122                           
  1123                           ;mainn.c: 36: RE1=!RE1;
  1124  0178  3002               	movlw	2
  1125  0179  0689               	xorwf	9,f
  1126                           
  1127                           ;mainn.c: 37: RE2=0;
  1128  017A  1109               	bcf	9,2	;volatile
  1129                           
  1130                           ;mainn.c: 38: PORTC=0xff;
  1131  017B  30FF               	movlw	255
  1132  017C  0087               	movwf	7	;volatile
  1133                           
  1134                           ;mainn.c: 39: PORTD=0xff;
  1135  017D  30FF               	movlw	255
  1136  017E  0088               	movwf	8	;volatile
  1137                           
  1138                           ;mainn.c: 40: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1139  017F  3006               	movlw	6
  1140  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0182  00A2               	movwf	??_ngat+2
  1143  0183  3013               	movlw	19
  1144  0184  00A1               	movwf	??_ngat+1
  1145  0185  30AD               	movlw	173
  1146  0186  00A0               	movwf	??_ngat
  1147  0187                     u128_27:	
  1148  0187  0BA0               	decfsz	??_ngat,f
  1149  0188  2987               	goto	u128_27
  1150  0189  0BA1               	decfsz	??_ngat+1,f
  1151  018A  2987               	goto	u128_27
  1152  018B  0BA2               	decfsz	??_ngat+2,f
  1153  018C  2987               	goto	u128_27
  1154  018D  3001               	movlw	1
  1155  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1156  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0190  00A0               	movwf	??_ngat
  1158  0191  0820               	movf	??_ngat,w
  1159  0192  07FB               	addwf	_i,f
  1160  0193  2973               	goto	L1
  1161  0194                     i1l85:	
  1162                           
  1163                           ;mainn.c: 41: }
  1164                           ;mainn.c: 42: }
  1165                           ;mainn.c: 44: }
  1166                           ;mainn.c: 45: if (RB1==0)
  1167  0194  1886               	btfsc	6,1	;volatile
  1168  0195  29C5               	goto	i1l91
  1169                           
  1170                           ;mainn.c: 46: {
  1171                           ;mainn.c: 47: _delay((unsigned long)((10)*(4000000/4000.0)));
  1172  0196  300D               	movlw	13
  1173  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1175  0199  00A1               	movwf	??_ngat+1
  1176  019A  30FB               	movlw	251
  1177  019B  00A0               	movwf	??_ngat
  1178  019C                     u129_27:	
  1179  019C  0BA0               	decfsz	??_ngat,f
  1180  019D  299C               	goto	u129_27
  1181  019E  0BA1               	decfsz	??_ngat+1,f
  1182  019F  299C               	goto	u129_27
  1183  01A0                     i1l92:	
  1184                           ;mainn.c: 48: while (RB1==0)
  1185                           
  1186  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1187  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1188  01A2  1886               	btfsc	6,1	;volatile
  1189  01A3  29C5               	goto	i1l91
  1190                           
  1191                           ;mainn.c: 49: {
  1192                           ;mainn.c: 50: for (i=0;i>=0;i++)
  1193  01A4  01FB               	clrf	_i
  1194  01A5                     L2:	
  1195  01A5  1BFB               	btfsc	_i,7
  1196  01A6  29A0               	goto	i1l92
  1197                           
  1198                           ;mainn.c: 51: {
  1199                           ;mainn.c: 52: RE0=1;
  1200  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1201  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1202  01A9  1409               	bsf	9,0	;volatile
  1203                           
  1204                           ;mainn.c: 53: RE1=0;
  1205  01AA  1089               	bcf	9,1	;volatile
  1206                           
  1207                           ;mainn.c: 54: RE2=0;
  1208  01AB  1109               	bcf	9,2	;volatile
  1209                           
  1210                           ;mainn.c: 55: PORTC=0xff;
  1211  01AC  30FF               	movlw	255
  1212  01AD  0087               	movwf	7	;volatile
  1213                           
  1214                           ;mainn.c: 56: PORTD=0xff;
  1215  01AE  30FF               	movlw	255
  1216  01AF  0088               	movwf	8	;volatile
  1217                           
  1218                           ;mainn.c: 57: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1219  01B0  3006               	movlw	6
  1220  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1221  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1222  01B3  00A2               	movwf	??_ngat+2
  1223  01B4  3013               	movlw	19
  1224  01B5  00A1               	movwf	??_ngat+1
  1225  01B6  30AD               	movlw	173
  1226  01B7  00A0               	movwf	??_ngat
  1227  01B8                     u130_27:	
  1228  01B8  0BA0               	decfsz	??_ngat,f
  1229  01B9  29B8               	goto	u130_27
  1230  01BA  0BA1               	decfsz	??_ngat+1,f
  1231  01BB  29B8               	goto	u130_27
  1232  01BC  0BA2               	decfsz	??_ngat+2,f
  1233  01BD  29B8               	goto	u130_27
  1234  01BE  3001               	movlw	1
  1235  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1236  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1237  01C1  00A0               	movwf	??_ngat
  1238  01C2  0820               	movf	??_ngat,w
  1239  01C3  07FB               	addwf	_i,f
  1240  01C4  29A5               	goto	L2
  1241  01C5                     i1l91:	
  1242                           
  1243                           ;mainn.c: 58: }
  1244                           ;mainn.c: 59: }
  1245                           ;mainn.c: 60: }
  1246                           ;mainn.c: 61: if (RB2==0)
  1247  01C5  1906               	btfsc	6,2	;volatile
  1248  01C6  2A21               	goto	i1l97
  1249                           
  1250                           ;mainn.c: 62: {
  1251                           ;mainn.c: 63: _delay((unsigned long)((10)*(4000000/4000.0)));
  1252  01C7  300D               	movlw	13
  1253  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1254  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1255  01CA  00A1               	movwf	??_ngat+1
  1256  01CB  30FB               	movlw	251
  1257  01CC  00A0               	movwf	??_ngat
  1258  01CD                     u131_27:	
  1259  01CD  0BA0               	decfsz	??_ngat,f
  1260  01CE  29CD               	goto	u131_27
  1261  01CF  0BA1               	decfsz	??_ngat+1,f
  1262  01D0  29CD               	goto	u131_27
  1263  01D1                     i1l1094:	
  1264                           ;mainn.c: 64: while (RB2==0)
  1265                           
  1266  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1267  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1268  01D3  1906               	btfsc	6,2	;volatile
  1269  01D4  2A21               	goto	i1l97
  1270                           
  1271                           ;mainn.c: 65: {
  1272                           ;mainn.c: 66: RE0=1;
  1273  01D5  1409               	bsf	9,0	;volatile
  1274                           
  1275                           ;mainn.c: 67: RE1=RE2=0;
  1276  01D6  1109               	bcf	9,2	;volatile
  1277  01D7  1089               	bcf	9,1	;volatile
  1278                           
  1279                           ;mainn.c: 68: countxanh++;
  1280  01D8  3001               	movlw	1
  1281  01D9  00A0               	movwf	??_ngat
  1282  01DA  0820               	movf	??_ngat,w
  1283  01DB  07FA               	addwf	_countxanh,f
  1284                           
  1285                           ;mainn.c: 69: dem=countxanh;
  1286  01DC  087A               	movf	_countxanh,w
  1287  01DD  00A0               	movwf	??_ngat
  1288  01DE  0820               	movf	??_ngat,w
  1289  01DF  00FC               	movwf	_dem
  1290                           
  1291                           ;mainn.c: 70: PORTC=code_7seg[dem/10];
  1292  01E0  300A               	movlw	10
  1293  01E1  00F0               	movwf	i1___awdiv@divisor
  1294  01E2  3000               	movlw	0
  1295  01E3  00F1               	movwf	i1___awdiv@divisor+1
  1296  01E4  087C               	movf	_dem,w
  1297  01E5  00F2               	movwf	i1___awdiv@dividend
  1298  01E6  01F3               	clrf	i1___awdiv@dividend+1
  1299  01E7  1BF2               	btfsc	i1___awdiv@dividend,7
  1300  01E8  03F3               	decf	i1___awdiv@dividend+1,f
  1301  01E9  120A  118A  22F5  120A  118A  	fcall	i1___awdiv
  1302  01EE  0870               	movf	?i1___awdiv,w
  1303  01EF  3E01               	addlw	low ((_code_7seg-__stringbase)| (0+32768))
  1304  01F0  0084               	movwf	4
  1305  01F1  120A  118A  23E6  120A  118A  	fcall	stringdir
  1306  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1307  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1308  01F8  0087               	movwf	7	;volatile
  1309                           
  1310                           ;mainn.c: 71: PORTD=code_7seg[dem%10];
  1311  01F9  300A               	movlw	10
  1312  01FA  00F0               	movwf	i1___awmod@divisor
  1313  01FB  3000               	movlw	0
  1314  01FC  00F1               	movwf	i1___awmod@divisor+1
  1315  01FD  087C               	movf	_dem,w
  1316  01FE  00F2               	movwf	i1___awmod@dividend
  1317  01FF  01F3               	clrf	i1___awmod@dividend+1
  1318  0200  1BF2               	btfsc	i1___awmod@dividend,7
  1319  0201  03F3               	decf	i1___awmod@dividend+1,f
  1320  0202  120A  118A  239B  120A  118A  	fcall	i1___awmod
  1321  0207  0870               	movf	?i1___awmod,w
  1322  0208  3E01               	addlw	low ((_code_7seg-__stringbase)| (0+32768))
  1323  0209  0084               	movwf	4
  1324  020A  120A  118A  23E6  120A  118A  	fcall	stringdir
  1325  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0211  0088               	movwf	8	;volatile
  1328                           
  1329                           ;mainn.c: 72: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1330  0212  3006               	movlw	6
  1331  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0215  00A2               	movwf	??_ngat+2
  1334  0216  3013               	movlw	19
  1335  0217  00A1               	movwf	??_ngat+1
  1336  0218  30AD               	movlw	173
  1337  0219  00A0               	movwf	??_ngat
  1338  021A                     u132_27:	
  1339  021A  0BA0               	decfsz	??_ngat,f
  1340  021B  2A1A               	goto	u132_27
  1341  021C  0BA1               	decfsz	??_ngat+1,f
  1342  021D  2A1A               	goto	u132_27
  1343  021E  0BA2               	decfsz	??_ngat+2,f
  1344  021F  2A1A               	goto	u132_27
  1345  0220  29D1               	goto	i1l1094
  1346  0221                     i1l97:	
  1347                           
  1348                           ;mainn.c: 74: }
  1349                           ;mainn.c: 75: }
  1350                           ;mainn.c: 76: if (RB3==0)
  1351  0221  1986               	btfsc	6,3	;volatile
  1352  0222  2A7D               	goto	i1l101
  1353                           
  1354                           ;mainn.c: 77: {
  1355                           ;mainn.c: 78: _delay((unsigned long)((10)*(4000000/4000.0)));
  1356  0223  300D               	movlw	13
  1357  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0226  00A1               	movwf	??_ngat+1
  1360  0227  30FB               	movlw	251
  1361  0228  00A0               	movwf	??_ngat
  1362  0229                     u133_27:	
  1363  0229  0BA0               	decfsz	??_ngat,f
  1364  022A  2A29               	goto	u133_27
  1365  022B  0BA1               	decfsz	??_ngat+1,f
  1366  022C  2A29               	goto	u133_27
  1367  022D                     i1l1108:	
  1368                           ;mainn.c: 79: while (RB3==0)
  1369                           
  1370  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1371  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1372  022F  1986               	btfsc	6,3	;volatile
  1373  0230  2A7D               	goto	i1l101
  1374                           
  1375                           ;mainn.c: 80: {
  1376                           ;mainn.c: 81: RE0=0;
  1377  0231  1009               	bcf	9,0	;volatile
  1378                           
  1379                           ;mainn.c: 82: RE1=0;
  1380  0232  1089               	bcf	9,1	;volatile
  1381                           
  1382                           ;mainn.c: 84: countdo=countdo++;
  1383  0233  1509               	bsf	9,2	;volatile
  1384  0234  3001               	movlw	1
  1385  0235  00A0               	movwf	??_ngat
  1386  0236  0820               	movf	??_ngat,w
  1387  0237  07F9               	addwf	_countdo,f
  1388                           
  1389                           ;mainn.c: 85: dem=countdo;
  1390  0238  0879               	movf	_countdo,w
  1391  0239  00A0               	movwf	??_ngat
  1392  023A  0820               	movf	??_ngat,w
  1393  023B  00FC               	movwf	_dem
  1394                           
  1395                           ;mainn.c: 86: PORTC=code_7seg[dem/10];
  1396  023C  300A               	movlw	10
  1397  023D  00F0               	movwf	i1___awdiv@divisor
  1398  023E  3000               	movlw	0
  1399  023F  00F1               	movwf	i1___awdiv@divisor+1
  1400  0240  087C               	movf	_dem,w
  1401  0241  00F2               	movwf	i1___awdiv@dividend
  1402  0242  01F3               	clrf	i1___awdiv@dividend+1
  1403  0243  1BF2               	btfsc	i1___awdiv@dividend,7
  1404  0244  03F3               	decf	i1___awdiv@dividend+1,f
  1405  0245  120A  118A  22F5  120A  118A  	fcall	i1___awdiv
  1406  024A  0870               	movf	?i1___awdiv,w
  1407  024B  3E01               	addlw	low ((_code_7seg-__stringbase)| (0+32768))
  1408  024C  0084               	movwf	4
  1409  024D  120A  118A  23E6  120A  118A  	fcall	stringdir
  1410  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0254  0087               	movwf	7	;volatile
  1413                           
  1414                           ;mainn.c: 87: PORTD=code_7seg[dem%10];
  1415  0255  300A               	movlw	10
  1416  0256  00F0               	movwf	i1___awmod@divisor
  1417  0257  3000               	movlw	0
  1418  0258  00F1               	movwf	i1___awmod@divisor+1
  1419  0259  087C               	movf	_dem,w
  1420  025A  00F2               	movwf	i1___awmod@dividend
  1421  025B  01F3               	clrf	i1___awmod@dividend+1
  1422  025C  1BF2               	btfsc	i1___awmod@dividend,7
  1423  025D  03F3               	decf	i1___awmod@dividend+1,f
  1424  025E  120A  118A  239B  120A  118A  	fcall	i1___awmod
  1425  0263  0870               	movf	?i1___awmod,w
  1426  0264  3E01               	addlw	low ((_code_7seg-__stringbase)| (0+32768))
  1427  0265  0084               	movwf	4
  1428  0266  120A  118A  23E6  120A  118A  	fcall	stringdir
  1429  026B  1283               	bcf	3,5	;RP0=0, select bank0
  1430  026C  1303               	bcf	3,6	;RP1=0, select bank0
  1431  026D  0088               	movwf	8	;volatile
  1432                           
  1433                           ;mainn.c: 88: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1434  026E  3006               	movlw	6
  1435  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0271  00A2               	movwf	??_ngat+2
  1438  0272  3013               	movlw	19
  1439  0273  00A1               	movwf	??_ngat+1
  1440  0274  30AD               	movlw	173
  1441  0275  00A0               	movwf	??_ngat
  1442  0276                     u134_27:	
  1443  0276  0BA0               	decfsz	??_ngat,f
  1444  0277  2A76               	goto	u134_27
  1445  0278  0BA1               	decfsz	??_ngat+1,f
  1446  0279  2A76               	goto	u134_27
  1447  027A  0BA2               	decfsz	??_ngat+2,f
  1448  027B  2A76               	goto	u134_27
  1449  027C  2A2D               	goto	i1l1108
  1450  027D                     i1l101:	
  1451                           
  1452                           ;mainn.c: 89: }
  1453                           ;mainn.c: 90: }
  1454                           ;mainn.c: 91: if (RB4 == 0)
  1455  027D  1A06               	btfsc	6,4	;volatile
  1456  027E  2A8F               	goto	i1l109
  1457                           
  1458                           ;mainn.c: 92: {
  1459                           ;mainn.c: 93: _delay((unsigned long)((10)*(4000000/4000.0)));
  1460  027F  300D               	movlw	13
  1461  0280  1283               	bcf	3,5	;RP0=0, select bank0
  1462  0281  1303               	bcf	3,6	;RP1=0, select bank0
  1463  0282  00A1               	movwf	??_ngat+1
  1464  0283  30FB               	movlw	251
  1465  0284  00A0               	movwf	??_ngat
  1466  0285                     u135_27:	
  1467  0285  0BA0               	decfsz	??_ngat,f
  1468  0286  2A85               	goto	u135_27
  1469  0287  0BA1               	decfsz	??_ngat+1,f
  1470  0288  2A85               	goto	u135_27
  1471  0289                     i1l106:	
  1472                           ;mainn.c: 94: while (RB4 == 0);
  1473                           
  1474  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1475  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1476  028B  1E06               	btfss	6,4	;volatile
  1477  028C  2A89               	goto	i1l106
  1478                           
  1479                           ;mainn.c: 95: setting_confirmed = 1;
  1480  028D  01B3               	clrf	_setting_confirmed
  1481  028E  0AB3               	incf	_setting_confirmed,f
  1482  028F                     i1l109:	
  1483  028F  0826               	movf	??_ngat+6,w
  1484  0290  00FF               	movwf	127
  1485  0291  0825               	movf	??_ngat+5,w
  1486  0292  008A               	movwf	10
  1487  0293  0824               	movf	??_ngat+4,w
  1488  0294  0084               	movwf	4
  1489  0295  0E23               	swapf	(??_ngat+3)^0,w
  1490  0296  0083               	movwf	3
  1491  0297  0EFE               	swapf	126,f
  1492  0298  0E7E               	swapf	126,w
  1493  0299  0009               	retfie
  1494  029A                     __end_of_ngat:	
  1495                           
  1496                           	psect	intentry
  1497  0004                     __pintentry:	
  1498                           ;incstack = 0
  1499                           ; Regs used in _ngat: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1500                           
  1501  0004                     interrupt_function:	
  1502  007E                     saved_w	set	btemp
  1503  0004  00FE               	movwf	btemp
  1504  0005  0E03               	swapf	3,w
  1505  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1507  0008  00A3               	movwf	??_ngat+3
  1508  0009  0804               	movf	4,w
  1509  000A  00A4               	movwf	??_ngat+4
  1510  000B  080A               	movf	10,w
  1511  000C  00A5               	movwf	??_ngat+5
  1512  000D  087F               	movf	btemp+1,w
  1513  000E  00A6               	movwf	??_ngat+6
  1514  000F  120A  118A  2960   	ljmp	_ngat
  1515                           
  1516                           	psect	text4
  1517  039B                     __ptext4:	
  1518 ;; *************** function i1___awmod *****************
  1519 ;; Defined at:
  1520 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  divisor         2    0[COMMON] int 
  1523 ;;  dividend        2    2[COMMON] int 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  __awmod         1    6[COMMON] unsigned char 
  1526 ;;  __awmod         1    5[COMMON] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  2    0[COMMON] int 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1536 ;;      Params:         4       0       0       0       0
  1537 ;;      Locals:         2       0       0       0       0
  1538 ;;      Temps:          1       0       0       0       0
  1539 ;;      Totals:         7       0       0       0       0
  1540 ;;Total ram usage:        7 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_ngat
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           
  1550                           ;psect for function i1___awmod
  1551  039B                     i1___awmod:	
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  1555  039B  01F6               	clrf	i1___awmod@sign
  1556  039C  1FF3               	btfss	i1___awmod@dividend+1,7
  1557  039D  2BA5               	goto	i1l1020
  1558  039E  09F2               	comf	i1___awmod@dividend,f
  1559  039F  09F3               	comf	i1___awmod@dividend+1,f
  1560  03A0  0AF2               	incf	i1___awmod@dividend,f
  1561  03A1  1903               	skipnz
  1562  03A2  0AF3               	incf	i1___awmod@dividend+1,f
  1563  03A3  01F6               	clrf	i1___awmod@sign
  1564  03A4  0AF6               	incf	i1___awmod@sign,f
  1565  03A5                     i1l1020:	
  1566  03A5  1FF1               	btfss	i1___awmod@divisor+1,7
  1567  03A6  2BAC               	goto	i1l1024
  1568  03A7  09F0               	comf	i1___awmod@divisor,f
  1569  03A8  09F1               	comf	i1___awmod@divisor+1,f
  1570  03A9  0AF0               	incf	i1___awmod@divisor,f
  1571  03AA  1903               	skipnz
  1572  03AB  0AF1               	incf	i1___awmod@divisor+1,f
  1573  03AC                     i1l1024:	
  1574  03AC  0870               	movf	i1___awmod@divisor,w
  1575  03AD  0471               	iorwf	i1___awmod@divisor+1,w
  1576  03AE  1903               	btfsc	3,2
  1577  03AF  2BD9               	goto	i1l1042
  1578  03B0  01F5               	clrf	i1___awmod@counter
  1579  03B1  0AF5               	incf	i1___awmod@counter,f
  1580  03B2                     i1l1032:	
  1581  03B2  1BF1               	btfsc	i1___awmod@divisor+1,7
  1582  03B3  2BC0               	goto	i1l1034
  1583  03B4  3001               	movlw	1
  1584  03B5                     u94_25:	
  1585  03B5  1003               	clrc
  1586  03B6  0DF0               	rlf	i1___awmod@divisor,f
  1587  03B7  0DF1               	rlf	i1___awmod@divisor+1,f
  1588  03B8  3EFF               	addlw	-1
  1589  03B9  1D03               	skipz
  1590  03BA  2BB5               	goto	u94_25
  1591  03BB  3001               	movlw	1
  1592  03BC  00F4               	movwf	??i1___awmod
  1593  03BD  0874               	movf	??i1___awmod,w
  1594  03BE  07F5               	addwf	i1___awmod@counter,f
  1595  03BF  2BB2               	goto	i1l1032
  1596  03C0                     i1l1034:	
  1597  03C0  0871               	movf	i1___awmod@divisor+1,w
  1598  03C1  0273               	subwf	i1___awmod@dividend+1,w
  1599  03C2  1D03               	skipz
  1600  03C3  2BC6               	goto	u96_25
  1601  03C4  0870               	movf	i1___awmod@divisor,w
  1602  03C5  0272               	subwf	i1___awmod@dividend,w
  1603  03C6                     u96_25:	
  1604  03C6  1C03               	skipc
  1605  03C7  2BCE               	goto	i1l1038
  1606  03C8  0870               	movf	i1___awmod@divisor,w
  1607  03C9  02F2               	subwf	i1___awmod@dividend,f
  1608  03CA  0871               	movf	i1___awmod@divisor+1,w
  1609  03CB  1C03               	skipc
  1610  03CC  03F3               	decf	i1___awmod@dividend+1,f
  1611  03CD  02F3               	subwf	i1___awmod@dividend+1,f
  1612  03CE                     i1l1038:	
  1613  03CE  3001               	movlw	1
  1614  03CF                     u97_25:	
  1615  03CF  1003               	clrc
  1616  03D0  0CF1               	rrf	i1___awmod@divisor+1,f
  1617  03D1  0CF0               	rrf	i1___awmod@divisor,f
  1618  03D2  3EFF               	addlw	-1
  1619  03D3  1D03               	skipz
  1620  03D4  2BCF               	goto	u97_25
  1621  03D5  3001               	movlw	1
  1622  03D6  02F5               	subwf	i1___awmod@counter,f
  1623  03D7  1D03               	btfss	3,2
  1624  03D8  2BC0               	goto	i1l1034
  1625  03D9                     i1l1042:	
  1626  03D9  0876               	movf	i1___awmod@sign,w
  1627  03DA  1903               	btfsc	3,2
  1628  03DB  2BE1               	goto	i1l1046
  1629  03DC  09F2               	comf	i1___awmod@dividend,f
  1630  03DD  09F3               	comf	i1___awmod@dividend+1,f
  1631  03DE  0AF2               	incf	i1___awmod@dividend,f
  1632  03DF  1903               	skipnz
  1633  03E0  0AF3               	incf	i1___awmod@dividend+1,f
  1634  03E1                     i1l1046:	
  1635  03E1  0873               	movf	i1___awmod@dividend+1,w
  1636  03E2  00F1               	movwf	?i1___awmod+1
  1637  03E3  0872               	movf	i1___awmod@dividend,w
  1638  03E4  00F0               	movwf	?i1___awmod
  1639  03E5  0008               	return
  1640  03E6                     __end_ofi1___awmod:	
  1641                           
  1642                           	psect	text5
  1643  02F5                     __ptext5:	
  1644 ;; *************** function i1___awdiv *****************
  1645 ;; Defined at:
  1646 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  divisor         2    0[COMMON] int 
  1649 ;;  dividend        2    2[COMMON] int 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  __awdiv         2    7[COMMON] int 
  1652 ;;  __awdiv         1    6[COMMON] unsigned char 
  1653 ;;  __awdiv         1    5[COMMON] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2    0[COMMON] int 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         4       0       0       0       0
  1664 ;;      Locals:         4       0       0       0       0
  1665 ;;      Temps:          1       0       0       0       0
  1666 ;;      Totals:         9       0       0       0       0
  1667 ;;Total ram usage:        9 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_ngat
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function i1___awdiv
  1678  02F5                     i1___awdiv:	
  1679                           
  1680                           ;incstack = 0
  1681                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  1682  02F5  01F6               	clrf	i1___awdiv@sign
  1683  02F6  1FF1               	btfss	i1___awdiv@divisor+1,7
  1684  02F7  2AFF               	goto	i1l976
  1685  02F8  09F0               	comf	i1___awdiv@divisor,f
  1686  02F9  09F1               	comf	i1___awdiv@divisor+1,f
  1687  02FA  0AF0               	incf	i1___awdiv@divisor,f
  1688  02FB  1903               	skipnz
  1689  02FC  0AF1               	incf	i1___awdiv@divisor+1,f
  1690  02FD  01F6               	clrf	i1___awdiv@sign
  1691  02FE  0AF6               	incf	i1___awdiv@sign,f
  1692  02FF                     i1l976:	
  1693  02FF  1FF3               	btfss	i1___awdiv@dividend+1,7
  1694  0300  2B0A               	goto	i1l982
  1695  0301  09F2               	comf	i1___awdiv@dividend,f
  1696  0302  09F3               	comf	i1___awdiv@dividend+1,f
  1697  0303  0AF2               	incf	i1___awdiv@dividend,f
  1698  0304  1903               	skipnz
  1699  0305  0AF3               	incf	i1___awdiv@dividend+1,f
  1700  0306  3001               	movlw	1
  1701  0307  00F4               	movwf	??i1___awdiv
  1702  0308  0874               	movf	??i1___awdiv,w
  1703  0309  06F6               	xorwf	i1___awdiv@sign,f
  1704  030A                     i1l982:	
  1705  030A  01F7               	clrf	i1___awdiv@quotient
  1706  030B  01F8               	clrf	i1___awdiv@quotient+1
  1707  030C  0870               	movf	i1___awdiv@divisor,w
  1708  030D  0471               	iorwf	i1___awdiv@divisor+1,w
  1709  030E  1903               	btfsc	3,2
  1710  030F  2B41               	goto	i1l1004
  1711  0310  01F5               	clrf	i1___awdiv@counter
  1712  0311  0AF5               	incf	i1___awdiv@counter,f
  1713  0312                     i1l992:	
  1714  0312  1BF1               	btfsc	i1___awdiv@divisor+1,7
  1715  0313  2B20               	goto	i1l994
  1716  0314  3001               	movlw	1
  1717  0315                     u84_25:	
  1718  0315  1003               	clrc
  1719  0316  0DF0               	rlf	i1___awdiv@divisor,f
  1720  0317  0DF1               	rlf	i1___awdiv@divisor+1,f
  1721  0318  3EFF               	addlw	-1
  1722  0319  1D03               	skipz
  1723  031A  2B15               	goto	u84_25
  1724  031B  3001               	movlw	1
  1725  031C  00F4               	movwf	??i1___awdiv
  1726  031D  0874               	movf	??i1___awdiv,w
  1727  031E  07F5               	addwf	i1___awdiv@counter,f
  1728  031F  2B12               	goto	i1l992
  1729  0320                     i1l994:	
  1730  0320  3001               	movlw	1
  1731  0321                     u86_25:	
  1732  0321  1003               	clrc
  1733  0322  0DF7               	rlf	i1___awdiv@quotient,f
  1734  0323  0DF8               	rlf	i1___awdiv@quotient+1,f
  1735  0324  3EFF               	addlw	-1
  1736  0325  1D03               	skipz
  1737  0326  2B21               	goto	u86_25
  1738  0327  0871               	movf	i1___awdiv@divisor+1,w
  1739  0328  0273               	subwf	i1___awdiv@dividend+1,w
  1740  0329  1D03               	skipz
  1741  032A  2B2D               	goto	u87_25
  1742  032B  0870               	movf	i1___awdiv@divisor,w
  1743  032C  0272               	subwf	i1___awdiv@dividend,w
  1744  032D                     u87_25:	
  1745  032D  1C03               	skipc
  1746  032E  2B36               	goto	i1l1000
  1747  032F  0870               	movf	i1___awdiv@divisor,w
  1748  0330  02F2               	subwf	i1___awdiv@dividend,f
  1749  0331  0871               	movf	i1___awdiv@divisor+1,w
  1750  0332  1C03               	skipc
  1751  0333  03F3               	decf	i1___awdiv@dividend+1,f
  1752  0334  02F3               	subwf	i1___awdiv@dividend+1,f
  1753  0335  1477               	bsf	i1___awdiv@quotient,0
  1754  0336                     i1l1000:	
  1755  0336  3001               	movlw	1
  1756  0337                     u88_25:	
  1757  0337  1003               	clrc
  1758  0338  0CF1               	rrf	i1___awdiv@divisor+1,f
  1759  0339  0CF0               	rrf	i1___awdiv@divisor,f
  1760  033A  3EFF               	addlw	-1
  1761  033B  1D03               	skipz
  1762  033C  2B37               	goto	u88_25
  1763  033D  3001               	movlw	1
  1764  033E  02F5               	subwf	i1___awdiv@counter,f
  1765  033F  1D03               	btfss	3,2
  1766  0340  2B20               	goto	i1l994
  1767  0341                     i1l1004:	
  1768  0341  0876               	movf	i1___awdiv@sign,w
  1769  0342  1903               	btfsc	3,2
  1770  0343  2B49               	goto	i1l1008
  1771  0344  09F7               	comf	i1___awdiv@quotient,f
  1772  0345  09F8               	comf	i1___awdiv@quotient+1,f
  1773  0346  0AF7               	incf	i1___awdiv@quotient,f
  1774  0347  1903               	skipnz
  1775  0348  0AF8               	incf	i1___awdiv@quotient+1,f
  1776  0349                     i1l1008:	
  1777  0349  0878               	movf	i1___awdiv@quotient+1,w
  1778  034A  00F1               	movwf	?i1___awdiv+1
  1779  034B  0877               	movf	i1___awdiv@quotient,w
  1780  034C  00F0               	movwf	?i1___awdiv
  1781  034D  0008               	return
  1782  034E                     __end_ofi1___awdiv:	
  1783  007E                     btemp	set	126	;btemp
  1784  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     19      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ngat in COMMON

    _ngat->i1___awdiv

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _ngat in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ngat in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ngat in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ngat in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1448
                                             16 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     722
                                              7 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     726
                                              7 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ngat                                                 7     7      0     804
                                              0 BANK0      7     7      0
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (3) i1___awmod                                            7     3      4     400
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) i1___awdiv                                            9     5      4     404
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 _ngat (ROOT)
   i1___awdiv
   i1___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 27 16:52:20 2024

                      _i 007B                        pc 0002              __CFG_CP$OFF 0000  
           ___awdiv@sign 002D                       fsr 0004                      l119 00C5  
                    l900 02B1                      l910 02B9                      l912 02C7  
                    l922 02E8                      l926 02F0                      l918 02DD  
                    l950 0367                      l942 0361                      l952 0375  
                    l960 038E                      l938 035A                      l964 0396  
                    l956 0383                      l894 02A6                      _GIE 005F  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RE0 0048  
                    _RE1 0049                      _RE2 004A             __CFG_CPD$OFF 0000  
                    u655 02BC                      u675 02C8                      u755 036A  
                    u685 02D4                      u695 02DE                      u775 037B  
                    u785 0384                      _dem 007C                      fsr0 0004  
           ___awmod@sign 002D             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   l1150 006A                     l1142 0052                     l1160 0073  
                   l1162 00BF                     l1184 0114                     l1176 0110  
                   u1140 003D                     u1150 0046                     u1160 004F  
                   u1154 0040                     u1164 0049                     u1237 0063  
                   u1247 00B2                     u1257 0102                     u1267 0153  
                   _INTF 0059                     _RBIE 005B                     _RBIF 0058  
                   i1l91 01C5                     i1l92 01A0                     i1l85 0194  
                   i1l86 016E                     i1l97 0221                     _WPUB 0095  
           __CFG_WRT$OFF 0000                     _main 0020                     _ngat 0160  
                   btemp 007E                     start 0012            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000                    ?_main 0070           i1___awdiv@sign 0076  
                  ?_ngat 0070          __end_of___awdiv 02F5            __CFG_WDTE$OFF 0000  
        __end_of___awmod 039B                    _ANSEL 0188          ___awdiv@divisor 0027  
                  _IOCB0 04B0                    _IOCB1 04B1                    _IOCB2 04B2  
                  _IOCB3 04B3                    _IOCB4 04B4                    i1l101 027D  
                  i1l106 0289                    i1l109 028F                    i1l982 030A  
                  i1l992 0312                    i1l976 02FF                    i1l994 0320  
        ___awdiv@counter 002C                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088                    u84_25 0315  
                  u86_25 0321                    u94_25 03B5                    u87_25 032D  
                  u88_25 0337                    u96_25 03C6                    u97_25 03CF  
         __CFG_FCMEN$OFF 0000                    _nRBPU 040F           i1___awmod@sign 0076  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E       __size_ofi1___awdiv 0059       __size_ofi1___awmod 004B  
        __initialization 0015             __end_of_main 0160             __end_of_ngat 029A  
                 ??_main 0030                   ??_ngat 0020         ___awdiv@dividend 0029  
                 _ANSELH 0189                   i1l1000 0336                   i1l1004 0341  
                 i1l1020 03A5                   i1l1008 0349                   i1l1032 03B2  
                 i1l1024 03AC                   i1l1034 03C0                   i1l1042 03D9  
                 i1l1108 022D                   i1l1046 03E1                   i1l1038 03CE  
                 i1l1094 01D1                   u130_27 01B8                   u131_27 01CD  
                 u132_27 021A                   u133_27 0229                   u134_27 0276  
                 u135_27 0285                   u127_27 016A                   u128_27 0187  
                 u129_27 019C                   _TRISB0 0430                   _TRISB1 0431  
                 _TRISB2 0432                   _TRISB3 0433                   _TRISB4 0434  
                 _TRISE0 0448                   _TRISE1 0449                   _TRISE2 044A  
         __CFG_PWRTE$OFF 0000                ??___awdiv 002B                ??___awmod 002B  
       ___awdiv@quotient 002E          ___awmod@divisor 0027          ___awmod@counter 002C  
      __end_ofi1___awdiv 034E        __end_ofi1___awmod 03E6                   saved_w 007E  
__end_of__initialization 001C           __pcstackCOMMON 0070               __pbssBANK0 0033  
             __pmaintext 0020               __pintentry 0004       i1___awdiv@dividend 0072  
             __stringtab 03E6        __end_of_code_7seg 03F6       i1___awdiv@quotient 0077  
                ___awdiv 029A                  ___awmod 034E                  __ptext1 034E  
                __ptext2 029A                  __ptext3 0160                  __ptext4 039B  
                __ptext5 02F5                  _countdo 0079         ___awmod@dividend 0029  
   end_of_initialization 001C                i1___awdiv 02F5                i1___awmod 039B  
      _setting_confirmed 0033      start_initialization 0015               ?i1___awdiv 0070  
             ?i1___awmod 0070       i1___awmod@dividend 0072              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0020                _code_7seg 03EC  
               ?___awdiv 0027                 ?___awmod 0027        i1___awdiv@divisor 0070  
      i1___awdiv@counter 0075                __pstrings 03E6                _countxanh 007A  
            ??i1___awdiv 0074              ??i1___awmod 0074        interrupt_function 0004  
            __stringbase 03EB        i1___awmod@divisor 0070        i1___awmod@counter 0075  
       __size_of___awdiv 005B         __size_of___awmod 004D       __end_of__stringtab 03EC  
      __CFG_BOR4V$BOR40V 0000            __size_of_main 0140            __size_of_ngat 013A  
               intlevel1 0000                stringcode 03E6                 stringdir 03E6  
               stringtab 03E6  
